name: Rust

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  SHELL: /bin/bash

jobs:
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        rust: [beta, stable]
        features: ["--features debugmozjs", ""]
        exclude:
          - os: windows-latest
            rust: beta
    steps:
    - uses: actions/checkout@v2
    - name: Install deps on osx
      if: startsWith(matrix.os, 'macOS')
      run: |
        brew install python autoconf@2.13 ccache llvm yasm
    - name: Install deps on linux
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt install autoconf2.13 gcc-7 g++-7 ccache llvm -y
    - name: Install deps on windows
      if: startsWith(matrix.os, 'windows')
      run: |
        Start-BitsTransfer -Source https://ftp.mozilla.org/pub/mozilla/libraries/win32/MozillaBuildSetup-3.4.exe -Destination ./MozillaBuildSetup.exe
        .\MozillaBuildSetup.exe /S | Out-Null
        iwr -useb get.scoop.sh -outfile 'install.ps1'
        .\install.ps1 -RunAsAdmin
        scoop install llvm@14.0.6 --global
        echo "C:\ProgramData\scoop\shims;C:\Users\runneradmin\scoop\shims" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
    - uses: actions-rs/toolchain@v1
      with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          override: true
          default: true
    - name: ccache cache files
      if: startsWith(matrix.os, 'windows') != true
      uses: actions/cache@v1.1.0
      with:
        path: .ccache
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.toml') }}
    - name: Build POSIX
      if: startsWith(matrix.os, 'windows') != true
      run: |
        ccache -z
        ccache cargo build --verbose ${{ matrix.features }}
        ccache cargo test --verbose ${{ matrix.features }}
        ccache -s
    - name: Build Windows
      if: startsWith(matrix.os, 'windows')
      shell: cmd
      env:
        MOZTOOLS_PATH: 'C:\mozilla-build\msys\bin;C:\mozilla-build\bin'
        AUTOCONF: "C:/mozilla-build/msys/local/bin/autoconf-2.13"
        LINKER: "lld-link.exe"
        CC: "clang-cl.exe"
        CXX: "clang-cl.exe"
        NATIVE_WIN32_PYTHON: "C:\\mozilla-build\\python\\python.exe"
        PYTHON3: "C:\\mozilla-build\\python3\\python3.exe"
        LIBCLANG_PATH: "C:\\ProgramData\\scoop\\apps\\llvm\\current\\lib"
        CARGO_HOME: ${{ github.workspace }}\..\.cargo
      run: |
        cargo test --verbose --verbose ${{ matrix.features }} --lib

  build_result:
    name: homu build finished
    runs-on: ubuntu-latest
    needs: ["Build"]
    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: "!success()"
